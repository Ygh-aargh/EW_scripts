#!/bin/bash

UpgradePart () {
	xdotool mousemove --sync 1190 307 click 1 # Kill Daily Update
	sleep 1
	if [ $UPGRADE_PART != 0 ] ; then
		xdotool mousemove --sync 890 630 click 1 # Select ELab
		xdotool mousemove --sync 890 630 click 1 # View Equipment
		sleep 1
		xdotool mousemove --sync 785 285 click 1 # Parts
		sleep 1
		xdotool mousemove --sync 650 400 click 1 # Show filter list
		sleep 1
		#xdotool mousemove --sync 560 420 click 1 # No filters
		#xdotool mousemove --sync 560 440 click 1 # Concussion Effect
		#xdotool mousemove --sync 560 467 click 1 # Bomba Defense
		#xdotool mousemove --sync 575 488 click 1 # Decimator Defense
		#xdotool mousemove --sync 582 518 click 1 # Incineraptor def
		#xdotool mousemove --sync 602 543 click 1 # Battlecruiser def
		#xdotool mousemove --sync 560 570 click 1 # General's def
		xdotool mousemove --sync 611 589 click 1 # Health
		#xdotool mousemove --sync 560 620 click 1 # Damage
		#xdotool mousemove --sync 583 645 click 1 # Range
		#xdotool mousemove --sync 560 668 click 1 # Rate of Fire
		#xdotool mousemove --sync 560 718 click 1 # Splash Radius
		sleep 1
		CR=22
		case $CR in
		"11") # col:1 row:1
			xdotool mousemove --sync 570 490 click 1 # Select part
			sleep 1
			xdotool mousemove --sync 610 590 click 1;; # Menu:Upgrade
		"21") # col:2 row:1
			xdotool mousemove --sync 830 490 click 1 # Select part
			sleep 1
			xdotool mousemove --sync 870 590 click 1;; # Menu:Upgrade
		"12") # col:1 row:2
			xdotool mousemove --sync 570 640 click 1 # Select part
			sleep 1
			xdotool mousemove --sync 610 740 click 1;; # Menu:Upgrade
		"22") # col:2 row:2
			xdotool mousemove --sync 830 640 click 1 # Select part
			sleep 1
			xdotool mousemove --sync 870 740 click 1;; # Menu:Upgrade
		"13") # col:1 row:3
			xdotool mousemove --sync 570 780 click 1 # Select part
			sleep 1
			xdotool mousemove --sync 610 780 click 1;; # Menu:Upgrade
		"23") # col:2 row:3
			xdotool mousemove --sync 830 780 click 1 # Select part
			sleep 1
			xdotool mousemove --sync 870 780 click 1;; # Menu:Upgrade
		esac
		sleep 1
		xdotool mousemove --sync 1105 760 click 1 # Button:Upgrade
		sleep 1
		xdotool mousemove --sync 1105 760 click 1 # Button:Repair/Upgrade
		sleep 1
		xdotool mousemove --sync 1105 760 click 1 # Button:Repair
		sleep 1
		xdotool mousemove --sync 1200 250 click 1 # Close ELab
	else
		[ $CRAFT5 != 0 ] && ./Craft 1
	fi
	# craft from 10 basic in HQ (work around bug: A-1 does not properly update list of parts, HQ does)
	SwitchToHQ
	xdotool mousemove --sync 446 819 click 1 # Select ELab
	xdotool click 1 # View Equipment
	sleep 1
	xdotool mousemove --sync 930 285 click 1 # Craft
	sleep 1
	xdotool mousemove --sync 600 530 click 1 # Tier-1 Basic Craft
	sleep 1
	for j in 0 1 ; do
		for i in 0 1 2 3 4 ; do
			xdotool mousemove --sync $(( 640 + $i * 110 )) $(( 630 + $j * 80 )) click 1 # Pick
		done
	done
	sleep 1
	xdotool mousemove --sync 570 670 click 1 # Go to Left just in case
	xdotool mousemove --sync 1090 790 click 1 # Button: Craft
	sleep 1
	xdotool mousemove --sync 1200 250 click 1 # Close ELab
	SwitchToA1
} # 0:29

SwitchToHQ () {
	SwitchBase 239 # HQ
}

SwitchToA1 () {
	SwitchBase 282 # A-1
}

SwitchToC2 () {
	SwitchBase 322 # C-2
}

SwitchBase () {
	[ $# -lt 1 ] && exit
	xdotool mousemove --sync 1653 200 click 1 # empty
	xdotool mousemove --sync 64 243 click 1 # base list
	sleep 1
	xdotool mousemove --sync 182 $1 click 1 # choose base
	sleep 1
	xdotool mousemove --sync 64 243 click 1 # this is weird, now it requires 2 clicks to show list of bases (most of times it seems)
	sleep 1
	xdotool mousemove --sync 182 $1 click 1 # choose base again
	sleep 12
	xdotool mousemove --sync 1040 460 click 1 # close "Out Of Sync" error message
	sleep 1
	xdotool mousemove --sync 1540 732 click 1 # zoom out (requires the game settings to be opened)
	sleep 1
	xdotool mousemove --sync 1511 707 click 1 # zoom in (different coordinates to try to avoid chosing anything in case there's a building under cursor when the game settings are closed)
	sleep 1
}

Res_and_MapUpgrade () {
	# Collect Res
	xdotool mousemove --sync 1029 844 click 1 # Gas Refinery
	sleep 1
	xdotool mousemove --sync 1038 800 click 1 # Collect All
	sleep 1
	[ $MAP_UPGRADE == 0 ] && return
	# Convert EU to CG
	xdotool mousemove --sync 699 298 click 1 # Resource converter
	sleep 1
	xdotool mousemove --sync 699 298 click 1 # Convert Resources
	sleep 1
	xdotool mousemove --sync 906 432 click 1 # select from E
	xdotool mousemove --sync 739 518 click 1 # Select to C
	xdotool mousemove --sync 970 585 click 1 # convert most
	xdotool mousemove --sync 966 724 click 1 # Convert
	sleep 1
	xdotool mousemove --sync 986 432 click 1 # select from U
	xdotool mousemove --sync 820 518 click 1 # Select to G
	xdotool mousemove --sync 999 585 click 1 # convert all
	xdotool mousemove --sync 966 724 click 1 # Convert
	sleep 1
	xdotool mousemove --sync 1055 284 click 1 # Close
	sleep 1
	xdotool mousemove --sync 1555 892 click 1 # Open Map
	sleep 2
	xdotool mousemove --sync 1510 289 click 1 # Center on Home
	sleep 1
	xdotool mousemove --sync 875 499 click 1 # Go 1 left, 1 down
	sleep 1
	xdotool mousemove --sync 919 669 click 1 # Move Here
	sleep 1
	xdotool mousemove --sync 1100 653 click 1 # Move
	sleep 1
	xdotool mousemove --sync 1165 314 click 1 # Close Move
	sleep 2
	xdotool mousemove --sync 919 549 click 1 # Just in case: go 2 left, 2 down
	sleep 1
	xdotool mousemove --sync 993 724 click 1 # Move Here
	sleep 1
	xdotool mousemove --sync 1100 653 click 1 # Move
	sleep 1
	xdotool mousemove --sync 1165 314 click 1 # Close Move
	sleep 2
	xdotool mousemove --sync $( awk 'BEGIN {srand(); print 500 + int(700*rand()), 270 + int(450*rand())}' ) click 1 # If we're on a big obstacle, map edge or chain of 50k bases: pick a random position
	sleep 1
	xdotool mousemove_relative --sync 40 170 click 1 # Move Here
	sleep 1
	xdotool mousemove --sync 1100 653 click 1 # Move
	sleep 1
	xdotool mousemove --sync 1165 314 click 1 # Close Move
	sleep 1
	xdotool mousemove --sync 1212 214 click 1 # Close Map
	sleep 1
} # 0:25

Send_Res () {
	xdotool mousemove --sync 1006 329 click 1 # Supply Depot
	sleep 1
	xdotool click 1 # Transfer Resources
	sleep 1
	xdotool mousemove --sync 756 325 click 1 # Drop down "Base A"
	sleep 1
	xdotool mousemove --sync 646 353 click 1 # Select HQ
	sleep 1
	xdotool mousemove --sync 709 695 click 1 # Max to HQ
	sleep 1
	xdotool mousemove --sync 1026 736 click 1 # Transfer
	sleep 1
	xdotool mousemove --sync 756 325 click 1 # Drop down "Base A"
	sleep 1
	xdotool mousemove --sync 644 400 click 1 # Select Caldera 2
	sleep 1
	xdotool mousemove --sync 709 695 click 1 # Max to Caldera 2
	sleep 1
	xdotool mousemove --sync 1026 736 click 1 # Transfer
	sleep 1
	xdotool mousemove --sync 1088 248 click 1 # Close
}

SelectSimA1 () {
	SelectSim 497 681
}

SelectSimHQ () {
	SelectSim 30 660
}

SelectSim () {
	[ $# -ne 2 ] && exit
	#./Bombas2HQorC2 C ; sleep 3
	xdotool mousemove --sync $1 $2 click 1 # Open Simulator
	sleep 1
	xdotool click 1 # Menu:Simulations
	sleep 1
	xdotool mousemove --sync 640 350 click 1 # Defense Training
	sleep 1
	xdotool mousemove --sync 612 790 click 1 # Raining Fire
	sleep 1
	xdotool mousemove --sync 975 790 click --repeat 3 1 # 4th page
	ROW=1
	COL=4 # Lev 400000
	xdotool mousemove --sync $(( 700 + $COL * 100 )) $(( 250 + $ROW * 150 )) click 1
}

CloseSim () {
	xdotool mousemove --sync 1174 260 click 1 # Close "No time to wait"
	sleep 1
	xdotool mousemove --sync 1190 190 click 1 # Close sim
	sleep 1
	xdotool mousemove --sync 1185 361 click 1 # Close Defense Simulator info just in case
	sleep 1
}

Sim2Map2Sim () {
	if [ $MAP_UPGRADE != 0 ] ; then
		CloseSim
		Res_and_MapUpgrade
		SelectSim
	fi
}

FlashCheck () {
	if [ $( ps aux | grep flash | grep "Edgewo.*ppapi" | wc -l ) -ne 1 ] ; then
		xdotool mousemove --sync 344 93 click 1 # Refresh
		sleep 5
		xdotool mousemove --sync 1515 103 click 1 # Drop down "Your game from"
		sleep 1
		xdotool mousemove --sync 1492 148 click 1 # Select Kabam
		sleep 30
		xdotool mousemove --sync 1459 163 click 1 # Kill Kabam Rewards
		sleep 2
		xdotool mousemove --sync 1180 304 click 1 # Kill daily update
		sleep 1
		xdotool mousemove --sync 1683 717 click 1 # Open game settings to allow zoom in/out for centering
		sleep 240 # Wait to prevent an error "You are already running a simulation"
		echo "Flash restarted at $( date )" >> ../flash_restarts
	fi
}

Sim_15_n2 () {
	if [ $# == 0 ] ; then
		echo "Sim_15_n2 needs argument"
		exit
	fi
	if [ $1 -lt 0 -o $1 -gt 5 ] ; then
		echo "Sim_15_n2 needs argument between 0 and 5"
	else
		./SimpleSim 1 S_15
		./SimpleSim $(( 5 - $1 )) S_1
		./SimpleSim $1 S_2
	fi
}

Invasion () {
	xdotool mousemove --sync 712 801 click 1 # Invasion Simulator
	sleep 1
	xdotool click 1 # Simulations
	sleep 1
	for i in 1 2 3 ; do
		xdotool mousemove --sync 980 568 click 1 # Paragon
		sleep 2
		xdotool mousemove --sync 1105 878 click 1 # Fight
		j=0
		NUM=$( printf %03d $(( $( \ls -1tr "isim/isim_00_"[0-9][0-9][0-9].png | sed 's/isim\/isim_00_0*\(.*\)\.png/\1/' | tail -n 1 ) + 1 )) )
		for i in $( seq 8 ) ; do # Wait 8 minutes, move mouse from time to time
			sleep 30
			xdotool mousemove --sync 100 100
			j=$(( $j + 1 ))
			N=$( printf %02d $j )
			import -window $WID -crop 1705x798+0+108 "isim/isim_"${N}"_"${NUM}".png"
			sleep 30
			j=$(( $j + 1 ))
			N=$( printf %02d $j )
			xdotool mousemove --sync 1000 500
			import -window $WID -crop 1705x798+0+108 "isim/isim_"${N}"_"${NUM}".png"
		done
		xdotool mousemove --sync 844 213 click 1 # End battle
		sleep 5
		import -window $WID -crop 1705x798+0+108 "isim/isim_00_"${NUM}".png"
		xdotool mousemove --sync 1154 777 click 1 # Continue
		sleep 20
		xdotool mousemove --sync 1174 259 click 1 # # kill "No time to wait"
		sleep 1
	done
	xdotool mousemove --sync 1191 166 click 1 # Close the simulator
	echo "Invasion finished: "$( date )
}

if [ $# -ge 1 ] ; then
	MAX=$( awk 'BEGIN {print 1*'$1'}' )
	[ $MAX -le 0 ] && MAX=100
else
	MAX=500
fi

CRAFT5=1
MAP_UPGRADE=0
for i in $* ; do
	[ $i == "-mu" ] && MAP_UPGRADE=1
	[ $i == "-nc" ] && CRAFT5=0
done
UPGRADE_PART=0

TIME_HQ=16
TIME_A1=12

echo "UPGRADE_PART="$UPGRADE_PART" MAP_UPGRADE="$MAP_UPGRADE" CRAFT5="$CRAFT5

sleep 3
xdotool mousemove --sync  1805 213 click 1 # move pointer to a safe position
WID=$( xwininfo | grep Window\ id | awk '{print $4}' & sleep 1 && xdotool click 1 ) # get Window ID of the browser

echo "Start cycle: "`date`
for c in $( seq 1 $MAX ) ; do

	FlashCheck

	# 0*30 + 0*15 + 0*2 + 0*1 = 0 sim_xp/0 sim = ? sim_xp/sim
	# time: 0:00
	# limit lev: 0 sim = 0

	echo "Cycle: "$c" "`date`
done
